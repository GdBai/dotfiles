- defaults:
    link:
      relink: true

- clean: ['~']

- link:
    ~/.shrc: shrc
    ~/.bashrc: bash/bashrc
    ~/.inputrc: bash/inputrc
    ~/.bash_profile: bash/bash_profile
    ~/.zprofile: zsh/zprofile
    ~/.tmux.conf: tmux/tmux.conf
    ~/.config/tmux/tmux.inputrc:
      create: true
      path: tmux/tmux.inputrc
    ~/.config/tmux/update_display_tmuxline.sh:
      create: true
      path: tmux/update_display_tmuxline.sh
    ~/.config/tmux/update_tmuxline.sh:
      create: true
      path: tmux/update_tmuxline.sh
    ~/.vim/vimrc: vim/vimrc
    ~/.config/nvim/init.vim:
      create: true
      path: nvim/init.vim
      if: '[ ! -z "$(command -v nvim)" ]'
    ~/.vim/gvimrc: vim/gvimrc
    ~/.config/nvim/ginit.vim:
      create: true
      path: nvim/ginit.vim
      if: '[ ! -z "$(command -v nvim)" ]'
    ~/.vim/spell:
      create: true
      path: vim/spell
    ~/.vim/UltiSnips:
      create: true
      path: vim/UltiSnips
    ~/.vim/after:
      create: true
      path: vim/after
    ~/.vim/plugin:
      create: true
      path: vim/plugin
    ~/.vim/autoload/theme.vim:
      create: true
      path: vim/autoload/theme.vim
    ~/.jupyter/jupyter_server_config.json:
      create: true
      path: jupyter/jupyter_server_config.json
    ~/.jupyter/jupyter_server_config.py:
      create: true
      path: jupyter/jupyter_server_config.py
    ~/.jupyter/lab/user-settings:
      create: true
      path: jupyter/lab/user-settings
    ~/.config/jupytext.toml:
      create: true
      path: jupytext.toml
    ~/.config/pycodestyle:
      create: true
      path: pycodestyle

- shell:
  - [git submodule update --init --recursive, Installing submodules]
  -
    command: ./motd/append_motd
    description: Append motd if doesn't exist
  -
    command: git config --global core.excludesfile ~/.gitignore_global
    description: Configure global ignored files
  -
    command: if [ $(uname) = Darwin ]; then git config --global core.autocrlf input; fi
    description: Configure Git to ensure line endings in files you checkout are correct for macOS
  -
    command: if [ $(uname) = Linux ]; then git config --global core.autocrlf input; fi
    description: Configure Git to ensure line endings in files you checkout are correct for Linux

- defaults:
    link:
      if: '[ $(uname) = Darwin ]'
      relink: true

- link:
    ~/.gitignore_global: git/gitignore_global_macos
    ~/.zshrc: zsh/zshrc_macos
    ~/.config/nvim/coc-settings.json:
      create: true
      path: nvim/coc-settings_macos.json
    ~/.config/kitty/kitty.conf:
      create: true
      path: kitty/kitty_macos.conf
    ~/.config/alacritty/alacritty.yml:
      create: true
      path: alacritty/alacritty_macos.yml
    ~/.aria2/aria2.conf:
      create: true
      path: aria2/aria2_macos.conf
    ~/.config/mpv/mpv.conf:
      create: true
      path: mpv/mpv_macos/mpv.conf
    ~/.config/mpv/input.conf:
      create: true
      path: mpv/mpv_macos/input.conf
    ~/.config/mpv/script-opts/osc.conf:
      create: true
      path: mpv/mpv_macos/script-opts/osc.conf
    ~/.doom.d/init.el:
      create: true
      path: emacs/doom_macos/init.el
    ~/.doom.d/config.el:
      create: true
      path: emacs/doom_macos/config.el

- defaults:
    link:
      if: '[ $(uname) = Linux ]'
      relink: true

- link:
    ~/.gitignore_global: git/gitignore_global_linux
    ~/.zshrc: zsh/zshrc_linux
    ~/.config/nvim/coc-settings.json:
      create: true
      path: nvim/coc-settings_linux.json
